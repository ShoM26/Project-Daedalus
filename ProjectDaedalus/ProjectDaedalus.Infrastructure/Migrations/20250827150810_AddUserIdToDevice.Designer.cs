// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectDaedalus.Infrastructure.Data;

#nullable disable

namespace ProjectDaedalus.Infrastructure.Migrations
{
    [DbContext(typeof(DaedalusContext))]
    [Migration("20250827150810_AddUserIdToDevice")]
    partial class AddUserIdToDevice
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ProjectDaedalus.Core.Entities.Device", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("device_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DeviceId"));

                    b.Property<string>("ConnectionAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("connection_address");

                    b.Property<string>("ConnectionType")
                        .IsRequired()
                        .HasColumnType("enum('USB','Bluetooth','WiFi')")
                        .HasColumnName("connection_type");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("device_name");

                    b.Property<DateTime?>("LastSeen")
                        .HasColumnType("timestamp")
                        .HasColumnName("last_seen");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("enum('Active','Inactive','Disconnected')")
                        .HasColumnName("status");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DeviceId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ConnectionAddress" }, "connection_address")
                        .IsUnique();

                    b.ToTable("devices", (string)null);
                });

            modelBuilder.Entity("ProjectDaedalus.Core.Entities.Plant", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("plant_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PlantId"));

                    b.Property<string>("FamiliarName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("familiar_name");

                    b.Property<string>("FunFact")
                        .HasColumnType("text")
                        .HasColumnName("fun_fact");

                    b.Property<decimal>("MoistureHighRange")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("moisture_high_range");

                    b.Property<decimal>("MoistureLowRange")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("moisture_low_range");

                    b.Property<string>("ScientificName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("scientific_name");

                    b.HasKey("PlantId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ScientificName" }, "scientific_name")
                        .IsUnique();

                    b.ToTable("plants", (string)null);
                });

            modelBuilder.Entity("ProjectDaedalus.Core.Entities.SensorHistory", b =>
                {
                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp")
                        .HasColumnName("time_stamp");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int")
                        .HasColumnName("device_id");

                    b.Property<decimal>("MoistureLevel")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("moisture_level");

                    b.HasKey("TimeStamp", "DeviceId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "DeviceId" }, "fk_sensor_history");

                    b.ToTable("sensor_history", (string)null);
                });

            modelBuilder.Entity("ProjectDaedalus.Core.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("varchar(320)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email")
                        .IsUnique();

                    b.HasIndex(new[] { "Username", "Password" }, "username")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("ProjectDaedalus.Core.Entities.UserPlant", b =>
                {
                    b.Property<int>("UserPlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_plant_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserPlantId"));

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("date_added")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int")
                        .HasColumnName("device_id");

                    b.Property<int>("PlantId")
                        .HasColumnType("int")
                        .HasColumnName("plant_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("UserPlantId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "DeviceId" }, "fk_userplants_device");

                    b.HasIndex(new[] { "PlantId" }, "fk_userplants_plant");

                    b.HasIndex(new[] { "UserId", "DeviceId" }, "user_id")
                        .IsUnique();

                    b.ToTable("user_plants", (string)null);
                });

            modelBuilder.Entity("ProjectDaedalus.Core.Entities.SensorHistory", b =>
                {
                    b.HasOne("ProjectDaedalus.Core.Entities.Device", "Device")
                        .WithMany("SensorHistories")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sensor_history");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("ProjectDaedalus.Core.Entities.UserPlant", b =>
                {
                    b.HasOne("ProjectDaedalus.Core.Entities.Device", "Device")
                        .WithMany("UserPlants")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_userplants_device");

                    b.HasOne("ProjectDaedalus.Core.Entities.Plant", "Plant")
                        .WithMany("UserPlants")
                        .HasForeignKey("PlantId")
                        .IsRequired()
                        .HasConstraintName("fk_userplants_plant");

                    b.HasOne("ProjectDaedalus.Core.Entities.User", "User")
                        .WithMany("UserPlants")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_userplants_user");

                    b.Navigation("Device");

                    b.Navigation("Plant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectDaedalus.Core.Entities.Device", b =>
                {
                    b.Navigation("SensorHistories");

                    b.Navigation("UserPlants");
                });

            modelBuilder.Entity("ProjectDaedalus.Core.Entities.Plant", b =>
                {
                    b.Navigation("UserPlants");
                });

            modelBuilder.Entity("ProjectDaedalus.Core.Entities.User", b =>
                {
                    b.Navigation("UserPlants");
                });
#pragma warning restore 612, 618
        }
    }
}
